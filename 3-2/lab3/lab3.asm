code	equ $F000
data	equ $0000
porta   equ $1000
portb	equ $1004
portc	equ $1003
porte	equ $100A
ddrc	equ	$1007 ; DDRC - регистр настройки направления разрядов порта C:
tlfg2	equ	$1025
tmsk2	equ	$1024

* TODO
*--------------------------------------------
* Вывод нажатой клавиши на индикатор работает
* Диоды зажигаются по номерам
*--------------------------------------------

	org	data
init_PC		fcb $87 ; 10000111b
col_count	fcb $01 ; 00000001b
timer  fcb 0
direction bsz 1
start_led bsz 1

	org	code
begin:
	ldaa init_PC ; инициализация битов 0 - 2, 7 порта C на выход
	staa ddrc	 ; бит установлен в 0 - разряд порта работает на вход, 1 - на выход
	ldab col_count ; загрузка в регистр B начального значения счетчика колонок
	
scan_keys:
	cmpb #$08 ; сканирование колонок клавиатуры: проверка на переполнение счечика
	bne check1A ; переход, если значение B не равно $08
	ldab col_count ; реинициализация если было переполнение

check1A:
	stab portc ; загрузка единицы в очередную колонку, если не было переполнения в счетчике
	
	ldaa porte ; загрузка состояния порта Е в акк. А
	anda #%0001 ; нажата ли кнопка в первой строке?
	beq	check1B ; переход, если не первая строка
	tba ; копирование счечика колонок в регистр A из B
	anda #%0100 ; нажата ли кнопка в первом столбце?
	beq check2A ; переход, если нет
	ldaa #%00001000 ; вывод цифры "1"
	staa porta ; вывод цифры "1"
	ldaa #%10000000 ; зажигаем первый диод
	staa portb ; зажигаем первый диод
	staa start_led ; сохраняем стартовый номер
	jmp end_scan ; переход в конец кода. Для команды BRA данный переход слишком делёкий!
check2A:	
	tba
	anda #%0010 ; нажата ли кнопка во втором столбце?
	beq check3A ; переход, если нет
	ldaa #%00010000 ; вывод цифры "2"
	staa porta ; вывод цифры "2"
	ldaa #%01000000 ; зажигаем второй диод
	staa portb ; зажигаем второй диод
	staa start_led ; сохраняем стартовый номер
	jmp end_scan ; переход в конец кода
check3A:	
	tba
	ldaa #%00011000 ; вывод цифры "3"
	staa porta ; вывод цифры "3"
	ldaa #%00100000 ; зажигаем третий диод
	staa portb ; зажигаем третий диод
	staa start_led ; сохраняем стартовый номер
	jmp end_scan

check1B:
	ldaa porte ; загрузка состояния порта Е в акк. А
	anda #%0010 ; нажата ли кнопка во второй строке?
	beq	check1C ; переход, если не вторая строка
	tba
	anda #%0100 ; нажата ли кнопка в первом столбце?
	beq check2B ; переход, если нет
	ldaa #%00100000 ; вывод цифры "4"
	staa porta ; вывод цифры "4"
	ldaa #%00010000 ; зажигаем четвертый диод
	staa portb ; зажигаем четвертый диод
	staa start_led ; сохраняем стартовый номер
	jmp end_scan
check2B:	
	tba
	anda #%0010 ; нажата ли кнопка во втором столбце?
	beq check3B
	ldaa #%00101000 ; вывод цифры "5"
	staa porta ; вывод цифры "5"
	ldaa #%00001000 ; зажигаем пятый диод
	staa portb ; зажигаем пятый диод
	staa start_led ; сохраняем стартовый номер
	jmp end_scan
check3B:	
	tba
	ldaa #%00110000 ; вывод цифры "6"
	staa porta ; вывод цифры "6"
	ldaa #%00000100 ; зажигаем шестой диод
	staa portb ; зажигаем шестой диод
	staa start_led ; сохраняем стартовый номер
	jmp end_scan
	
check1C:
	ldaa porte ; загрузка состояния порта Е в акк. А
	anda #%0100 ; нажата ли кнопка в третьей строке?
	beq	check1D ; переход, если не третья строка
	tba
	anda #%0100 ; нажата ли кнопка в первом столбце?
	beq check2C ; переход, если нет
	ldaa #%00111000 ; вывод цифры "7"
	staa porta ; вывод цифры "7"
	ldaa #%00000010 ; зажигаем седьмой диод
	staa portb ; зажигаем седьмой диод
	staa start_led ; сохраняем стартовый номер
	jmp end_scan
check2C:	
	tba
	anda #%0010 ; нажата ли кнопка во втором столбце?
	beq check3C ; переход, если нет
	ldaa #%01000000 ; вывод цифры "8"
	staa porta ; вывод цифры "8"
	ldaa #%00000001 ; зажигаем восьмой диод
	staa portb ; зажигаем восьмой диод
	staa start_led ; сохраняем стартовый номер
	jmp end_scan
check3C:	
	jmp end_scan
	
check1D:
	ldaa porte ; загрузка состояния порта Е в акк. А
	anda #%1000 ; нажата ли кнопка в четвертой строке?
	beq	end_scan ; переход, если не четвертая строка
	tba
	anda #%0100 ; нажата ли кнопка в первом столбце?
	beq check2D ; переход, если нет
	ldaa #01010000 ; вывод цифры "A"
	staa porta ; вывод цифры "A"

	ldaa #%10000000 ; задаем движение влево
	staa portb ; задаем движение влево
	
	jmp end_scan
check2D:	
	tba
	anda #%0010 ; нажата ли кнопка во втором столбце?
	beq check3D ; переход, если нет
	jmp end_scan
check3D:	
	tba
	ldaa #$01011000 ; вывод значения "b"
	staa porta ; вывод значения "b"
	
end_scan:
	aslb ; сдвиг регистра B влево
	jmp scan_keys ; переход в начало цикла сканирования. Для команды BRA данный переход слишком делёкий!

loop:
	staa portb ; Записываем значение акк. А в порт B
	bsr	delay ; Подпрограмма задержки
	incb ; Инкремент значения акк. B

	cmpb #15 ; Проверяем, что алгоритм завершился
	beq begin ; Переход в начало алгоритма, если == 15
	cmpb #9 ; Иначе проверяем, что алгоритм движения вправо завершился
	bhs shift_left ; Если >= 9, то сдвиг влево
	bra shift_right ; Иначе сдвиг вправо

to_right:
	ldaa start_led ; загружаем стартовый номер
	staa portb ; выводим на диоды
	bsr	delay ; Подпрограмма задержки
	bra right_loop ; Цикл сдвига вправо
	
	cmpa #%10000000 ; Проверяем, что алгоритм завершился
	beq begin ; Переход в начало алгоритма, если завершился
	cmpb #%10000000 ; Иначе проверяем, что алгоритм движения вправо завершился
	bhs shift_left ; Если >= 9, то сдвиг влево
	bra shift_right ; Иначе сдвиг вправо

right_loop:
	cmpa #%00000001 ; Проверяем, что движение вправо закончилось
	bne shift_right ; Сдвиг, если движение вправо не завершилось
	rts ; Иначе возврат к месту вызова

shift_right:
	lsra ; Сдвиг значения акк. А вправо
	rts ; Возврат к циклу

shift_left:
	lsla ; Сдвиг значения акк. А влево
	rts ; Возврат к циклу

delay:
	ldaa tlfg2
    anda #%10000000
    beq	delay	
	staa tlfg2
    ldaa timer        			
	deca
    staa timer
    bne	delay
    rts

	org $FFFE
	FDB	begin