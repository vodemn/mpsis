0001 f000                    code	equ $F000
0002 0000                    data	equ $0000
0003 1000                    porta   equ $1000
0004 1004                    portb	equ $1004
0005 1003                    portc	equ $1003
0006 100a                    porte	equ $100A
0007 1007                    ddrc	equ	$1007 ; DDRC - регистр настройки направления разрядов порта C:
0008 1025                    tlfg2	equ	$1025
0009 1024                    tmsk2	equ	$1024
0010                         
0011 0000                    	org	data
0012 0000 87                 init_PC		fcb $87 ; 10000111b
0013 0001 01                 col_count	fcb $01 ; 00000001b
0014 0002 00                 timer  fcb 0
0015 0003 00                 start_led bsz 1
0016 0004 00                 start_number bsz 1
0017 0005 00                 direction bsz 1
0018                         
0019 f000                    	org	code
0020                         begin:
0021 f000 8e 00 0f           	lds #$000F
0022 f003 86 03              	ldaa #%00000011
0023 f005 b7 10 24           	staa tmsk2	; настройка коэффициента деления частоты таймера
0024 f008 96 00              	ldaa init_PC ; инициализация битов 0 - 2, 7 порта C на выход
0025 f00a b7 10 07           	staa ddrc	 ; бит установлен в 0 - на вход, 1 - на выход
0026 f00d d6 01              	ldab col_count ; загрузка начального значения счетчика колонок
0027                         
0028                         init:
0029 f00f 86 80              	ldaa #%10000000
0030 f011 97 03              	staa start_led
0031 f013 86 01              	ldaa #%00000001
0032 f015 97 05              	staa direction
0033 f017 97 04              	staa start_number
0034                         scan_button:
0035 f019 b6 10 00               ldaa porta ; загружаем значение с порта A в акк. A
0036 f01c 84 01              	anda #%00000001 ; проверяем, нажата ли кнопка
0037 f01e 27 03              	beq scan_keys ; если не нажата, то проверяем клавиатуру
0038 f020 7e f0 e3           	jmp check_button ; иначе запускаем цикл
0039                         	
0040                         scan_keys:
0041 f023 c1 00              	cmpb #%08 ; проверка на переполнение счечика
0042 f025 26 02              	bne check1A ; переход, если значение B не равно $08
0043 f027 d6 01              	ldab col_count ; реинициализация если было переполнение
0044                         
0045                         check1A:
0046 f029 f7 10 03           	stab portc ; загрузка единицы, если не было переполнения в счетчике
0047                         	
0048 f02c b6 10 0a           	ldaa porte ; загрузка состояния порта Е в акк. А
0049 f02f 84 01              	anda #%0001 ; нажата ли кнопка в первой строке?
0050 f031 27 2c              	beq	check1B ; переход, если не первая строка
0051 f033 17                 	tba ; перемещение счечика колонок в регистр A из B
0052 f034 84 04              	anda #%0100 ; нажата ли кнопка в первом столбце?
0053 f036 27 0b              	beq check2A ; переход, если нет
0054 f038 86 08              	ldaa #%00001000 ; сохраняем цифру "2"
0055 f03a 97 04              	staa start_number
0056 f03c 86 80              	ldaa #%10000000 ; сохраняем первый диод
0057 f03e 97 03              	staa start_led
0058 f040 7e f0 df           	jmp end_scan ; переход в конец кода
0059                         check2A:	
0060 f043 17                 	tba
0061 f044 84 02              	anda #%0010 ; нажата ли кнопка во втором столбце?
0062 f046 27 0b              	beq check3A ; переход, если нет
0063 f048 86 10              	ldaa #%00010000 ; сохраняем цифру "2"
0064 f04a 97 04              	staa start_number
0065 f04c 86 40              	ldaa #%01000000 ; сохраняем второй диод
0066 f04e 97 03              	staa start_led
0067 f050 7e f0 df           	jmp end_scan ; переход в конец кода
0068                         check3A:	
0069 f053 17                 	tba
0070 f054 86 18              	ldaa #%00011000 ; сохраняем цифру "3"
0071 f056 97 04              	staa start_number
0072 f058 86 20              	ldaa #%00100000 ; сохраняем третий диод
0073 f05a 97 03              	staa start_led
0074 f05c 7e f0 df           	jmp end_scan
0075                         
0076                         check1B:
0077 f05f b6 10 0a           	ldaa porte ; загрузка состояния порта Е в акк. А
0078 f062 84 02              	anda #%0010 ; нажата ли кнопка во второй строке?
0079 f064 27 2c              	beq	check1C ; переход, если не вторая строка
0080 f066 17                 	tba
0081 f067 84 04              	anda #%0100 ; нажата ли кнопка в первом столбце?
0082 f069 27 0b              	beq check2B ; переход, если нет
0083 f06b 86 20              	ldaa #%00100000 ; сохраняем цифру "4"
0084 f06d 97 04              	staa start_number
0085 f06f 86 10              	ldaa #%00010000 ; сохраняем четвертый диод
0086 f071 97 03              	staa start_led
0087 f073 7e f0 df           	jmp end_scan
0088                         check2B:	
0089 f076 17                 	tba
0090 f077 84 02              	anda #%0010 ; нажата ли кнопка во втором столбце?
0091 f079 27 0b              	beq check3B
0092 f07b 86 28              	ldaa #%00101000 ; сохраняем цифру "5"
0093 f07d 97 04              	staa start_number
0094 f07f 86 08              	ldaa #%00001000 ; сохраняем пятый диод
0095 f081 97 03              	staa start_led
0096 f083 7e f0 df           	jmp end_scan
0097                         check3B:	
0098 f086 17                 	tba
0099 f087 86 30              	ldaa #%00110000 ; сохраняем цифру "6"
0100 f089 97 04              	staa start_number
0101 f08b 86 04              	ldaa #%00000100 ; сохраняем шестой диод
0102 f08d 97 03              	staa start_led
0103 f08f 7e f0 df           	jmp end_scan
0104                         	
0105                         check1C:
0106 f092 b6 10 0a           	ldaa porte ; загрузка состояния порта Е в акк. А
0107 f095 84 04              	anda #%0100 ; нажата ли кнопка в третьей строке?
0108 f097 27 23              	beq	check1D ; переход, если не третья строка
0109 f099 17                 	tba
0110 f09a 84 04              	anda #%0100 ; нажата ли кнопка в первом столбце?
0111 f09c 27 0b              	beq check2C ; переход, если нет
0112 f09e 86 38              	ldaa #%00111000 ; сохраняем цифру "7"
0113 f0a0 97 04              	staa start_number
0114 f0a2 86 02              	ldaa #%00000010 ; сохраняем седьмой диод
0115 f0a4 97 03              	staa start_led
0116 f0a6 7e f0 df           	jmp end_scan
0117                         check2C:	
0118 f0a9 17                 	tba
0119 f0aa 84 02              	anda #%0010 ; нажата ли кнопка во втором столбце?
0120 f0ac 27 0b              	beq check3C ; переход, если нет
0121 f0ae 86 40              	ldaa #%01000000 ; сохраняем цифру "8"
0122 f0b0 97 04              	staa start_number
0123 f0b2 86 01              	ldaa #%00000001 ; сохраняем восьмой диод
0124 f0b4 97 03              	staa start_led
0125 f0b6 7e f0 df           	jmp end_scan
0126                         check3C:	
0127 f0b9 7e f0 df           	jmp end_scan
0128                         	
0129                         check1D:
0130 f0bc b6 10 0a           	ldaa porte ; загрузка состояния порта Е в акк. А
0131 f0bf 84 08              	anda #%1000 ; нажата ли кнопка в четвертой строке?
0132 f0c1 27 1c              	beq	end_scan ; переход, если не четвертая строка
0133 f0c3 17                 	tba
0134 f0c4 84 04              	anda #%0100 ; нажата ли кнопка в первом столбце?
0135 f0c6 27 07              	beq check2D ; переход, если нет
0136 f0c8 86 80              	ldaa #%10000000 ; иначе задаем направление влево
0137 f0ca 97 05              	staa direction
0138 f0cc 7e f0 df           	jmp end_scan ; продолжаем скан кнопок
0139                         check2D:	
0140 f0cf 17                 	tba
0141 f0d0 84 02              	anda #%0010 ; нажата ли кнопка во втором столбце?
0142 f0d2 27 03              	beq check3D ; переход, если нет
0143 f0d4 7e f0 df           	jmp end_scan
0144                         check3D:	
0145 f0d7 17                 	tba
0146 f0d8 86 01              	ldaa #%00000001 ; задаем направление вправо
0147 f0da 97 05              	staa direction
0148 f0dc 7e f0 df           	jmp end_scan ; продолжаем скан кнопок
0149                         	
0150                         end_scan:
0151 f0df 58                 	aslb ; сдвиг регистра B влево
0152 f0e0 7e f0 19           	jmp scan_button ; переход в начало цикла сканирования
0153                         
0154                         check_button:
0155 f0e3 8d 4f              	bsr	show ; вывод состояния
0156 f0e5 b6 10 00               ldaa porta ; Загружаем значение с порта A в акк. A
0157 f0e8 84 01              	anda #%00000001 ; Проверяем, нажата ли кнопка
0158 f0ea 26 13              	bne loop ; Если нажата, то запускаем цикл
0159 f0ec 86 00              	ldaa #%00000000 ; сохраняем цифру "0"
0160 f0ee b7 10 00           	staa porta ; сохраняем цифру "0"
0161 f0f1 97 04              	staa start_number
0162 f0f3 86 00              	ldaa #%00000000 ; выключаем диоды
0163 f0f5 b7 10 04           	staa portb ; выключаем диоды
0164 f0f8 97 03              	staa start_led
0165 f0fa d6 01              	ldab col_count
0166 f0fc 7e f0 0f           	jmp init
0167                         
0168                         loop:
0169 f0ff 96 03              	ldaa start_led ; загружаем из памяти диод
0170 f101 81 01              	cmpa #%00000001 ; проверяем конец движения вправо
0171 f103 27 12              	beq set_left ; меняем, если упёрлись
0172 f105 81 80              	cmpa #%10000000 ; иначе проверяем конец движения влево
0173 f107 27 08              	beq set_right ; меняем, если упёрлись
0174                         loop_next:
0175 f109 96 05              	ldaa direction ; загружаем из памяти направление
0176 f10b 81 01              	cmpa #%00000001 ; проверяем направление вправо
0177 f10d 27 0e              	beq shift_right ; если вправо, то шаг вправо
0178 f10f 20 15              	bra shift_left ; иначе шаг влево
0179                         
0180                         set_right:
0181 f111 86 01              	ldaa #%00000001 ; задаем направление вправо
0182 f113 97 05              	staa direction
0183 f115 20 f2              	bra loop_next
0184                         set_left:
0185 f117 86 80              	ldaa #%10000000 ; задаем направление влево
0186 f119 97 05              	staa direction
0187 f11b 20 ec              	bra loop_next
0188                         
0189                         shift_right:
0190 f11d 96 04              	ldaa start_number
0191 f11f 8b 08              	adda #%00001000 ; инкремент цифры
0192 f121 54                 	lsrb ; сдвиг вправо
0193 f122 8d 0b              	bsr save_state ; сохраняем состояние
0194 f124 20 bd              	bra check_button ; возврат к проверке кнопки
0195                         
0196                         shift_left:
0197 f126 96 04              	ldaa start_number
0198 f128 80 08              	suba #%00001000 ; декремент цифры
0199 f12a 58                 	lslb ; сдвиг влево
0200 f12b 8d 02              	bsr save_state ; сохраняем состояние
0201 f12d 20 b4              	bra check_button ; возврат к проверке кнопки
0202                         
0203                         save_state:
0204 f12f 97 04              	staa start_number ; сохраняем цифру
0205 f131 d7 03              	stab start_led ; сохраняем диод
0206 f133 39                 	rts
0207                         
0208                         show:
0209 f134 96 04              	ldaa start_number ; загружаем из памяти цифру
0210 f136 d6 03              	ldab start_led ; загружаем из памяти диод
0211 f138 b7 10 00           	staa porta ; выводим цифру
0212 f13b f7 10 04           	stab portb ; выводим диод
0213 f13e 8d 01              	bsr	delay
0214 f140 39                 	rts
0215                         
0216                         delay:
0217 f141 86 03              	ldaa #3 ; 0,524sec*3=1.5sec
0218 f143 97 02              	staa timer
0219                         wait
0220 f145 b6 10 25           	ldaa tlfg2
0221 f148 84 80                  anda #%10000000
0222 f14a 27 f9                  beq	wait	
0223 f14c b7 10 25           	staa tlfg2
0224 f14f 96 02                  ldaa timer        			
0225 f151 4a                 	deca
0226 f152 97 02                  staa timer
0227 f154 26 ef                  bne	wait
0228 f156 39                     rts
0229                         
0230 fffe                    	org $FFFE
0231 fffe f0 00              	FDB	begin  
